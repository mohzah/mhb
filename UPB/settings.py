"""
Django settings for UPB project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'k^jz(c2b@nbt@e#(t&&qy@r0f8lh3a$s5eh)k3z0q=hp$3a$^&'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django_admin_bootstrapped',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'crispy_forms',
    'django_extensions',
    'bootstrap3',
    'bootstrap_themes',
    'easy_select2',
    'django_tables2',
    'autoslug',
    'modulhandbuch',
    'django_auth_krb',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

KRB5_REALM = "UNI-PADERBORN.DE"

AUTHENTICATION_BACKENDS = (
    # if first one fails, Django tries the next backend
    # If a backend raises a PermissionDenied exception, authentication will immediately fail.
    # 'UPB.kerbauth.KerbAuth',
    'django_auth_krb.backends.KrbBackend',
    'django.contrib.auth.backends.ModelBackend',
)

ROOT_URLCONF = 'UPB.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': ['UPB/templates', 'UPB/UPB/templates', 'templates', ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'UPB.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'

# theme support not clear, this does not do anything; which "URL" is necessary here? 
# BOOTSTRAP3 = {'theme_url': "http://bootswatch.com/cosmo/"}
BOOTSTRAP3 = {'include_jquery': True}

CRISPY_TEMPLATE_PACK = 'bootstrap'

# own settings:
RUN_ON_WEBAPP = False

# redirect url after login
LOGIN_REDIRECT_URL = '/'

# to put the genreated PDF files in the right place:
# TODO: check whether getting DB_HOST is a viable, practical way to differentiate

if os.environ.get('DB_HOST'):
    # Absolute filesystem path to the directory that will hold user-uploaded files.
    # Example: "/var/www/example.com/media/"
    # MEDIA_ROOT = '/data/apps/mhb/modulhandbuch/media'
    MEDIA_ROOT = os.path.join(BASE_DIR, "media")

    # URL that handles the media served from MEDIA_ROOT. Make sure to use a
    # trailing slash.
    # Examples: "http://example.com/media/", "http://media.example.com/"
    MEDIA_URL = '/media/'
else:
    MEDIA_ROOT = os.path.join(BASE_DIR, "media")
    MEDIA_URL = '/media/'


# needed to make this work with bootstrap labels
from django.contrib.messages import constants as messages
MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}    
